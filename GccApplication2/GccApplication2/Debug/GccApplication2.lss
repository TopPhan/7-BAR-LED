
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000146  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000146  000001ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001f4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006b9  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005f3  00000000  00000000  00000911  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000282  00000000  00000000  00000f04  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001188  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000361  00000000  00000000  000011bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000e1  00000000  00000000  0000151d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  000015fe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e4       	ldi	r30, 0x46	; 70
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 6e 00 	call	0xdc	; 0xdc <main>
  7a:	0c 94 a1 00 	jmp	0x142	; 0x142 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <display>:
    }
}

void display(int a) 
{
	int chuc = a/10;
  82:	6a e0       	ldi	r22, 0x0A	; 10
  84:	70 e0       	ldi	r23, 0x00	; 0
  86:	0e 94 79 00 	call	0xf2	; 0xf2 <__divmodhi4>
	int dvi = a%10;
	PORTC &= ~(1<<LED_dvi);
  8a:	25 b3       	in	r18, 0x15	; 21
  8c:	2d 7f       	andi	r18, 0xFD	; 253
  8e:	25 bb       	out	0x15, r18	; 21
	LED_PORT = array[chuc];
  90:	fb 01       	movw	r30, r22
  92:	e0 5a       	subi	r30, 0xA0	; 160
  94:	ff 4f       	sbci	r31, 0xFF	; 255
  96:	20 81       	ld	r18, Z
  98:	22 bb       	out	0x12, r18	; 18
	PORTC |= (1<<LED_chuc);
  9a:	25 b3       	in	r18, 0x15	; 21
  9c:	21 60       	ori	r18, 0x01	; 1
  9e:	25 bb       	out	0x15, r18	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a0:	2f ef       	ldi	r18, 0xFF	; 255
  a2:	31 ee       	ldi	r19, 0xE1	; 225
  a4:	44 e0       	ldi	r20, 0x04	; 4
  a6:	21 50       	subi	r18, 0x01	; 1
  a8:	30 40       	sbci	r19, 0x00	; 0
  aa:	40 40       	sbci	r20, 0x00	; 0
  ac:	e1 f7       	brne	.-8      	; 0xa6 <display+0x24>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <display+0x2e>
  b0:	00 00       	nop
	_delay_ms(200);
	PORTC &= ~(1<<LED_chuc);
  b2:	25 b3       	in	r18, 0x15	; 21
  b4:	2e 7f       	andi	r18, 0xFE	; 254
  b6:	25 bb       	out	0x15, r18	; 21
	LED_PORT = array[dvi];
  b8:	fc 01       	movw	r30, r24
  ba:	e0 5a       	subi	r30, 0xA0	; 160
  bc:	ff 4f       	sbci	r31, 0xFF	; 255
  be:	80 81       	ld	r24, Z
  c0:	82 bb       	out	0x12, r24	; 18
	PORTC |= (1<<LED_dvi);
  c2:	85 b3       	in	r24, 0x15	; 21
  c4:	82 60       	ori	r24, 0x02	; 2
  c6:	85 bb       	out	0x15, r24	; 21
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	91 ee       	ldi	r25, 0xE1	; 225
  cc:	24 e0       	ldi	r18, 0x04	; 4
  ce:	81 50       	subi	r24, 0x01	; 1
  d0:	90 40       	sbci	r25, 0x00	; 0
  d2:	20 40       	sbci	r18, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <display+0x4c>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <display+0x56>
  d8:	00 00       	nop
  da:	08 95       	ret

000000dc <main>:
void display(int);

int main(void)
{
    // DEFINE LED
	DDRC |= (1<<LED_chuc) | (1<<LED_dvi);
  dc:	84 b3       	in	r24, 0x14	; 20
  de:	83 60       	ori	r24, 0x03	; 3
  e0:	84 bb       	out	0x14, r24	; 20
	LED_Direction = 0xff; // Set tat ca cac chan thanh 1111 1111 (1 = out put, 0 = input ) - DDRD (1,0) SET CHAN RA VAO
  e2:	8f ef       	ldi	r24, 0xFF	; 255
  e4:	81 bb       	out	0x11, r24	; 17
	LED_PORT = 0xff;   // Set ta ca cac port cua D thanh 1111 1111 (vi chon led anode 1 tat, 0 sang ) mac dinh se tat
  e6:	82 bb       	out	0x12, r24	; 18
	
    while (1) 
    {
		display(07);
  e8:	87 e0       	ldi	r24, 0x07	; 7
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	0e 94 41 00 	call	0x82	; 0x82 <display>
  f0:	fb cf       	rjmp	.-10     	; 0xe8 <main+0xc>

000000f2 <__divmodhi4>:
  f2:	97 fb       	bst	r25, 7
  f4:	07 2e       	mov	r0, r23
  f6:	16 f4       	brtc	.+4      	; 0xfc <__divmodhi4+0xa>
  f8:	00 94       	com	r0
  fa:	07 d0       	rcall	.+14     	; 0x10a <__divmodhi4_neg1>
  fc:	77 fd       	sbrc	r23, 7
  fe:	09 d0       	rcall	.+18     	; 0x112 <__divmodhi4_neg2>
 100:	0e 94 8d 00 	call	0x11a	; 0x11a <__udivmodhi4>
 104:	07 fc       	sbrc	r0, 7
 106:	05 d0       	rcall	.+10     	; 0x112 <__divmodhi4_neg2>
 108:	3e f4       	brtc	.+14     	; 0x118 <__divmodhi4_exit>

0000010a <__divmodhi4_neg1>:
 10a:	90 95       	com	r25
 10c:	81 95       	neg	r24
 10e:	9f 4f       	sbci	r25, 0xFF	; 255
 110:	08 95       	ret

00000112 <__divmodhi4_neg2>:
 112:	70 95       	com	r23
 114:	61 95       	neg	r22
 116:	7f 4f       	sbci	r23, 0xFF	; 255

00000118 <__divmodhi4_exit>:
 118:	08 95       	ret

0000011a <__udivmodhi4>:
 11a:	aa 1b       	sub	r26, r26
 11c:	bb 1b       	sub	r27, r27
 11e:	51 e1       	ldi	r21, 0x11	; 17
 120:	07 c0       	rjmp	.+14     	; 0x130 <__udivmodhi4_ep>

00000122 <__udivmodhi4_loop>:
 122:	aa 1f       	adc	r26, r26
 124:	bb 1f       	adc	r27, r27
 126:	a6 17       	cp	r26, r22
 128:	b7 07       	cpc	r27, r23
 12a:	10 f0       	brcs	.+4      	; 0x130 <__udivmodhi4_ep>
 12c:	a6 1b       	sub	r26, r22
 12e:	b7 0b       	sbc	r27, r23

00000130 <__udivmodhi4_ep>:
 130:	88 1f       	adc	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	5a 95       	dec	r21
 136:	a9 f7       	brne	.-22     	; 0x122 <__udivmodhi4_loop>
 138:	80 95       	com	r24
 13a:	90 95       	com	r25
 13c:	bc 01       	movw	r22, r24
 13e:	cd 01       	movw	r24, r26
 140:	08 95       	ret

00000142 <_exit>:
 142:	f8 94       	cli

00000144 <__stop_program>:
 144:	ff cf       	rjmp	.-2      	; 0x144 <__stop_program>
